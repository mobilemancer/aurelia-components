{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","resources/elements/droid-bot.ts","views/bot-demo.ts"],"names":[],"mappings":";;;;;;;;IAIA,IAAa,GAAG;QAAhB;QAQA,CAAC;QANC,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAE;aACnF,CAAC,CAAC;QACL,CAAC;QACH,UAAC;IAAD,CARA,AAQC,IAAA;IARY,GAAG;QADf,8BAAU;OACE,GAAG,CAQf;IARY,kBAAG;;;;;;ICJhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;ICtBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC;;;;;;;;;;;;;;ICFD;QAAA;QAMA,CAAC;QAHC,+BAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QACH,eAAC;IAAD,CANA,AAMC,IAAA;IALW;QAAT,4BAAQ;;2CAAO;IADL,4BAAQ;;;;;ICFrB;QAAA;YACY,YAAO,GAAG,gBAAgB,CAAC;YAC3B,WAAM,GAAG,iEAAiE,CAAC;QACvF,CAAC;QAAD,cAAC;IAAD,CAHA,AAGC,IAAA;IAHY,0BAAO","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\nimport { RouterConfiguration, Router } from 'aurelia-router';\n\n@autoinject\nexport class App {\n\n  configureRouter(config: RouterConfiguration, router: Router): void {\n    config.title = 'Title';\n    config.map([\n      { route: ['', 'bot'], name: 'bot', moduleId: 'views/bot-demo', title: 'bot demo' }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class DroidBot {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","export class BotDemo {\r\n    private botName = \"droid-worx-bot\";\r\n    private secret = \"QBuOcNrjjMc.cwA.16s.vR3iRE4E1DFbwEEmJLh5boGsHDCfgReUJbPV1g_37yc\";\r\n}"],"sourceRoot":"../../src"}